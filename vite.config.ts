import { defineConfig } from 'vite';
import swc from 'unplugin-swc';
import builtins from 'builtin-modules';
import { resolve } from 'path';

const isDev = process.env.NODE_ENV !== 'production';

export default defineConfig({
  plugins: [
    swc.vite({
      jsc: {
        parser: {
          syntax: 'typescript',
          tsx: false,
          decorators: true,
        },
        transform: {
          legacyDecorator: true,
          decoratorMetadata: true,
        },
        target: 'es2020',
        keepClassNames: true,
      },
    }),
  ],
  build: {
    lib: {
      entry: resolve(__dirname, 'src/main.ts'),
      formats: ['cjs'],
      fileName: () => 'main.js',
    },
    rollupOptions: {
      external: [
        'obsidian',
        'electron',
        '@codemirror/autocomplete',
        '@codemirror/collab',
        '@codemirror/commands',
        '@codemirror/language',
        '@codemirror/lint',
        '@codemirror/search',
        '@codemirror/state',
        '@codemirror/view',
        '@lezer/common',
        '@lezer/highlight',
        '@lezer/lr',
        ...builtins,
      ].filter(dep => !dep.startsWith('./') && !dep.startsWith('../')),
      output: {
        format: 'cjs',
        exports: 'auto',
        banner: `/* THIS IS A GENERATED/BUNDLED FILE BY VITE */`,
      },
    },
    sourcemap: isDev ? 'inline' : false,
    minify: !isDev,
    emptyOutDir: false,
    outDir: '.',
  },
  define: {
    'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV || 'development'),
  },
});